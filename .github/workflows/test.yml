name: build

on:
  push:
    branches: [master]

  pull_request:
    branches: [master]

env:
  S3_ENDPOINT: 'https://storage.yandexcloud.net'
  S3_PATH: 'v1/static'

jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
          node-version: 22

      - name: Install dependencies
        run: yarn

  build:
    runs-on: ubuntu-latest
    needs: dependencies
    env:
      PUBLIC_PATH: https://storage.yandexcloud.net/kholstinevich-static/v1/static/
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
          node-version: 22
      - name: Install dependencies
        run: yarn
      - name: Build
        run: yarn run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: packages/client/dist

  linters:
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
          node-version: 22
      - name: Install dependencies
        run: yarn
      - name: eslint
        run: yarn run eslint
      - name: eslint
        run: yarn run stylelint
      - name: eslint
        run: yarn run prettier

  upload:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: dist
      - name: test
        run: echo ${GITHUB_SHA::8}
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --exclude '*.html'
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: ${{ env.S3_ENDPOINT }}
          DEST_DIR: ${{ env.S3_PATH }}
          AWS_REGION: 'ru-central1'
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --exclude '*' --include '*.html'
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: ${{ env.S3_ENDPOINT }}
          DEST_DIR: '${{ env.S3_PATH }}/${GITHUB_SHA::8}'
          AWS_REGION: 'ru-central1'

  docker:
    runs-on: ubuntu-latest
    environment: production
    env:
      CR_REGISTRY: crp4ha0gophhmdbcg4ss
      IMAGE_TAG: ${{ github.sha }}
      HTML_PATH: ''
    steps:
      - uses: actions/checkout@v4
      - name: Login to Yandex Cloud
        run: |
          echo ${{secrets.DOCKER_OAUTH_TOKEN}}|docker login \
          --username oauth \
          --password-stdin \
          cr.yandex
      - name: export
        run: |
          echo "HTML_PATH=${S3_ENDPOINT}/${S3_PATH}/${GITHUB_SHA::8}/index.html" >> $HTML_PATH
      - name: echo
        run: echo $CR_REGISTRY
      - name: echo2
        run: echo $HTML_PATH
      - name: Build backend
        run: docker build -t cr.yandex/$CR_REGISTRY/backend:$IMAGE_TAG -f Dockerfile.backend .
      - name: Publish backend
        run: docker push cr.yandex/$CR_REGISTRY/$backend:$IMAGE_TAG
      - name: Build nginx
        run: docker build -t cr.yandex/$CR_REGISTRY/nginx:$IMAGE_TAG -f Dockerfile.nginx .
      - name: Publish nginx
        run: docker push cr.yandex/$CR_REGISTRY/$nginx:$IMAGE_TAG
